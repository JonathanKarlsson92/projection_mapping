<launch>
       	<!-- Launch the ar_track_alvar detection algorithm with remapped rosout -->
	<!-- Launch the depth registrered camera node, -->
	<remap from="rosout" to="not_rosout"/>

	<arg name="marker_size" default="9.0" />
	<arg name="max_new_marker_error" default="0.08" />
	<arg name="max_track_error" default="0.2" />
	<arg name="cam_info_topic" default="/camera/rgb/camera_info" />		
	<arg name="output_frame" default="/camera_link" />
	<arg name="max_frequency" default="20" />
	<arg name="marker_resolution" default="5" />
	<arg name="cam_image_topic" default="/camera/depth_registered/points" />

	<include file="$(find freenect_launch)/launch/examples/freenect-registered-xyzrgb.launch"/>

         <!--roslaunch openni2_launch openni2.launch-->

	<!-- Open server -->
	<!-- <include file="$(find project_mapping)/proj_mapp_bridge.html"/> -->

	<node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkers" respawn="false" output="log" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame) $(arg max_frequency) $(arg marker_resolution) " />
	<remap from="rosout" to="not_rosout"/>
	<!-- Launch the depth registrered camera node, -->

	<!-- Connect the kinect camera to the world frame -->
	<node pkg="tf" type="static_transform_publisher" name="world_to_camera_link" args="-0.66 -0.125 0.37 0.872665 0.0 0.0 /world /camera_link 100"/>

        <!-- the transformation node -->
	<node pkg="projection_mapping" type="transformation" name="mapping_node" output="screen"/>

	
	

</launch>
